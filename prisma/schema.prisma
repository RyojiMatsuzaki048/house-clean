// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Building {
  id      Int     @id @default(autoincrement())
  name    String
  places  Place[]
}

model Place {
  id         Int      @id @default(autoincrement())
  buildingId Int
  name       String
  description String? // 掃除内容の詳細
  building   Building @relation(fields: [buildingId], references: [id])
  tasks      Task[]
}

model Task {
  id        Int      @id @default(autoincrement())
  placeId   Int
  name      String
  point     Int
  cycleDays Int
  deletedAt DateTime? // 論理削除用
  place     Place    @relation(fields: [placeId], references: [id])
  assignments Assignment[]
  taskLogs  TaskLog[]
}

model User {
  id         Int          @id @default(autoincrement())
  name       String
  assignments Assignment[]
  taskLogs   TaskLog[]
  pointUsages PointUsage[]
}

model Assignment {
  id     Int   @id @default(autoincrement())
  taskId Int
  userId Int
  user   User  @relation(fields: [userId], references: [id])
  task   Task  @relation(fields: [taskId], references: [id])
}

model TaskLog {
  id       Int      @id @default(autoincrement())
  taskId   Int
  userId   Int
  dateDone DateTime
  task     Task     @relation(fields: [taskId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
}

model PointUsage {
  id          Int      @id @default(autoincrement())
  userId      Int
  pointsUsed  Int
  usedAt      DateTime
  description String
  user        User     @relation(fields: [userId], references: [id])
}